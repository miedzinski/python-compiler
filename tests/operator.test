[case is]
assert None is None
assert True is True
assert False is False
print(None is False)  # O: False
print(1 is 2)  # O: False

[case is-not]
assert (None is not None) is False
assert (True is not True) is False
assert (False is not False) is False
assert (None is not False) is True
assert (1 is not 2) is True

[case truth-none]
assert bool(None) is False

[case truth-int]
assert bool(0) is False
assert bool(42) is True

[case truth-float]
assert bool(0.) is False
assert bool(42.) is True

[case truth-bool]
assert bool(True) is True
assert bool(False) is False

[case truth-str]
assert bool('') is False
assert bool('str') is True

[case truth-list]
assert bool([]) is False
assert bool([False]) is True
assert bool([1, 2, 3]) is True

[case not]
assert not True is False
assert not False is True
assert not None is True
assert not 42 is True
assert not [] is True

[case minus]
print(-1)  # O: -1
print(-1.2)  # O: -1.2

[case add-numbers]
assert 1 + 2 == 3
assert 1. + .2 == 1.2
assert 2 + .3 == 2.3

[case add-strings]
assert 'a' + '' == 'a'
assert '' + 'b' == 'b'
assert 'foo' + 'bar' == 'foobar'

[case subtract-numbers]
assert 3 - 2 == 1
assert 2 - .2 == 1.8
assert 2. - .3 == 1.7
assert 3.5 - 2 == 1.5

[case multiply-numbers]
assert 2 * 3 == 6
assert 1 * 5 == 5
assert 4 * 0 == 0
assert 3 * 1.5 == 4.5

[case multiply-list]
[skip]
assert [] * 3 == []
assert [1] * 3 == [1, 1, 1]

[case division-numbers]
assert 5 / 2 == 2.5
assert 5 / 2.5 == 2.0
assert 3. / 3. == 1.
assert 3. / 1. == 3.

[case modulo-numbers]
assert 3 % 3 == 0
assert 3 % 2 == 1
assert 0 % 2 == 0
assert 1 % 2 == 1
assert 2. % 3.4 == 2.

[case equals]
assert (None == None) is True
assert (True == True) is True
assert (False == False) is True
assert (0 == 0) is True
assert (1 == 2) is False
assert (3 == 3) is True
assert (0 == None) is False
assert (2. == 2.) is True
assert (2. == 2) is True
assert ('foo' == 'bar') is False
assert ('foo' == 'foo') is True
assert ([] == []) is True
assert ([1, 2, 3] == [1, 2, 3]) is True
assert ([1, 2, 3] == [3, 2, 1]) is False

[case less-numbers]
assert (1 < 2) is True
assert (1 < 0) is False
assert (2 < 3.) is True
assert (3 < 0.5) is False
assert (2.2 < 3.3) is True
assert (5.3 < 3.) is False
assert (4.2 < 1) is False

[case less-equals-numbers]
assert (1 <= 2) is True
assert (1 <= 0) is False
assert (1 <= 1) is True
assert (2 <= 3.) is True
assert (3 <= 0.5) is False
assert (2.2 <= 3.3) is True
assert (4.3 <= 4.3) is True
assert (5.3 <= 3.) is False
assert (4.2 <= 1) is False
assert(2. <= 2) is True
assert(2 <= 2.) is True

[case greater-numbers]
assert (1 > 2) is False
assert (1 > 0) is True
assert (2 > 3.) is False
assert (3 > 0.5) is True
assert (2.2 > 3.3) is False
assert (5.3 > 3.) is True
assert (4.2 > 1) is True

[case greater-equals-numbers]
assert (1 >= 2) is False
assert (1 >= 0) is True
assert (1 >= 1) is True
assert (2 >= 3.) is False
assert (3 >= 0.5) is True
assert (2.2 >= 3.3) is False
assert (4.3 >= 4.3) is True
assert (5.3 >= 3.) is True
assert (4.2 >= 1) is True
assert(2. >= 2) is True
assert(2 >= 2.) is True

[case and]
assert (True and True) is True
assert (True and False) is False
assert (False and True) is False
assert (False and False) is False

[case or]
assert (True or True) is True
assert (True or False) is True
assert (False or True) is True
assert (False or False) is False
